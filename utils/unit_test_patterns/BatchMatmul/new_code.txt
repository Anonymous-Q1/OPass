#[version = "0.0.5"]
def @main(%x: Tensor[(2, 3, 4), float32] /* ty=Tensor[(2, 3, 4), float32] span=from_string:5:24 */, %w1: Tensor[(2, 5, 4), float32] /* ty=Tensor[(2, 5, 4), float32] span=from_string:3:28 */, %w2: Tensor[(2, 5, 4), float32] /* ty=Tensor[(2, 5, 4), float32] span=from_string:4:28 */, %w3: Tensor[(2, 5, 4), float32] /* ty=Tensor[(2, 5, 4), float32] span=from_string:5:28 */) -> (Tensor[(2, 3, 5), float32], Tensor[(2, 3, 5), float32], Tensor[(2, 3, 5), float32]) {
  %0 = (%w1, %w2, %w3) /* ty=(Tensor[(2, 5, 4), float32], Tensor[(2, 5, 4), float32], Tensor[(2, 5, 4), float32]) */;
  %1 = concatenate(%0, axis=1) /* ty=Tensor[(2, 15, 4), float32] */;
  %2 = nn.batch_matmul(%x, %1, transpose_b=True) /* ty=Tensor[(2, 3, 15), float32] */;
  %3 = strided_slice(%2, begin=[0, 0, 0], end=[-1, -1, 5], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(2, 3, 5), float32] */;
  %4 = strided_slice(%2, begin=[0, 0, 5], end=[-1, -1, 5], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(2, 3, 5), float32] */;
  %5 = strided_slice(%2, begin=[0, 0, 10], end=[-1, -1, 5], strides=[1, 1, 1], slice_mode="size", axes=None) /* ty=Tensor[(2, 3, 5), float32] */;
  (%3, %4, %5) /* ty=(Tensor[(2, 3, 5), float32], Tensor[(2, 3, 5), float32], Tensor[(2, 3, 5), float32]) span=from_string:3:3 */
}
