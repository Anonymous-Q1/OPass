#[version = "0.0.5"]
def @main(%x: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */, %y: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */) -> (Tensor[(10, 10), float32], (Tensor[(10, 10), float32], Tensor[(10, 10), float32])) {
  %0 = fn () -> () {
    () /* ty=() */
  } /* ty=fn () -> () */;
  let %x_0: ref(fn () -> ()) /* ty=ref(fn () -> ()) */ = ref(%0);
  %1 = zeros_like(%x) /* ty=Tensor[(10, 10), float32] */;
  %2 = ref(%1);
  let %x_30: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = (%x, %2) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */;
  %3 = zeros_like(%y) /* ty=Tensor[(10, 10), float32] */;
  %4 = ref(%3);
  let %x_31: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = (%y, %4) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */;
  %8 = fn (%x1: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */, %y1: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */, %bp: ref(fn () -> ()) /* ty=ref(fn () -> ()) */) -> (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) {
    let %x_1: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = %x1;
    let %x_2: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = %y1;
    let %x_3: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = %x_1.0 /* ty=Tensor[(10, 10), float32] */;
    let %x_4: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = %x_2.0 /* ty=Tensor[(10, 10), float32] */;
    let %x_5: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = multiply(%x_3, %x_4) /* ty=Tensor[(10, 10), float32] */;
    %5 = zeros_like(%x_5) /* ty=Tensor[(10, 10), float32] */;
    %6 = ref(%5);
    let %x_6: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = (%x_5, %6) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */;
    let %x_7: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = %x_6;
    let %x_8: fn () -> () /* ty=fn () -> () */ = ref_read(%bp);
    %7 = fn () -> () {
      let %x_12: ref(Tensor[(10, 10), float32]) /* ty=ref(Tensor[(10, 10), float32]) */ = %x_7.1 /* ty=ref(Tensor[(10, 10), float32]) */;
      let %x_9: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = ref_read(%x_12);
      let %x_13: ref(Tensor[(10, 10), float32]) /* ty=ref(Tensor[(10, 10), float32]) */ = %x_1.1 /* ty=ref(Tensor[(10, 10), float32]) */;
      let %x_14: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = ref_read(%x_13);
      let %x_15: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = multiply(%x_9, %x_4) /* ty=Tensor[(10, 10), float32] */;
      let %x_16: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = collapse_sum_like(%x_15, %x_3) /* ty=Tensor[(10, 10), float32] */;
      let %x_17: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = add(%x_14, %x_16) /* ty=Tensor[(10, 10), float32] */;
      let %x_18: ref(Tensor[(10, 10), float32]) /* ty=ref(Tensor[(10, 10), float32]) */ = %x_1.1 /* ty=ref(Tensor[(10, 10), float32]) */;
      let %x_10: () /* ty=() */ = ref_write(%x_18, %x_17);
      let %x_19: ref(Tensor[(10, 10), float32]) /* ty=ref(Tensor[(10, 10), float32]) */ = %x_2.1 /* ty=ref(Tensor[(10, 10), float32]) */;
      let %x_20: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = ref_read(%x_19);
      let %x_21: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = multiply(%x_9, %x_3) /* ty=Tensor[(10, 10), float32] */;
      let %x_22: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = collapse_sum_like(%x_21, %x_4) /* ty=Tensor[(10, 10), float32] */;
      let %x_23: Tensor[(10, 10), float32] /* ty=Tensor[(10, 10), float32] */ = add(%x_20, %x_22) /* ty=Tensor[(10, 10), float32] */;
      let %x_24: ref(Tensor[(10, 10), float32]) /* ty=ref(Tensor[(10, 10), float32]) */ = %x_2.1 /* ty=ref(Tensor[(10, 10), float32]) */;
      let %x_11: () /* ty=() */ = ref_write(%x_24, %x_23);
      let %x_25: () /* ty=() */ = %x_8() /* ty=() */;
      let %x_26: () /* ty=() */ = %x_25;
      let %x_27: () /* ty=() */ = %x_26;
      let %x_28: () /* ty=() */ = %x_27;
      %x_28
    } /* ty=fn () -> () */;
    let %x_29: () /* ty=() */ = ref_write(%bp, %7);
    %x_7
  } /* ty=fn ((Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])), (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])), ref(fn () -> ())) -> (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */;
  let %x_32: (Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */ = %8(%x_30, %x_31, %x_0) /* ty=(Tensor[(10, 10), float32], ref(Tensor[(10, 10), float32])) */;
  %9 = %x_32.1 /* ty=ref(Tensor[(10, 10), float32]) */;
  %10 = %x_32.0 /* ty=Tensor[(10, 10), float32] */;
  %11 = ones_like(%10) /* ty=Tensor[(10, 10), float32] */;
  let %x_33: () /* ty=() */ = ref_write(%9, %11);
  %12 = ref_read(%x_0);
  let %x_34: () /* ty=() */ = %12() /* ty=() */;
  %13 = %x_30.1 /* ty=ref(Tensor[(10, 10), float32]) */;
  %14 = %x_31.1 /* ty=ref(Tensor[(10, 10), float32]) */;
  %15 = ref_read(%13);
  %16 = ref_read(%14);
  %17 = %x_32.0 /* ty=Tensor[(10, 10), float32] */;
  %18 = (%15, %16) /* ty=(Tensor[(10, 10), float32], Tensor[(10, 10), float32]) */;
  (%17, %18) /* ty=(Tensor[(10, 10), float32], (Tensor[(10, 10), float32], Tensor[(10, 10), float32])) */
}
