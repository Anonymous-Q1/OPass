#[version = "0.0.5"]
def @main(%x: float32, %y: Tensor[(1, 2, 8, 10), int64]) {
  %0 = cast_like(0, meta[relay.Constant][0]);
  %1 = shape_of(%y, dtype="int32");
  %2 = shape_of(%1, dtype="int32");
  %3 = cast_like(%2, meta[relay.Constant][0]);
  %4 = slice_like(%3, meta[relay.Constant][0], axes=None);
  %5 = less(meta[relay.Constant][0], %0);
  %6 = add(meta[relay.Constant][0], %4);
  %7 = where(%5, %6, meta[relay.Constant][0]);
  %8 = greater_equal(%7, %4);
  %9 = where(%8, %4, %7);
  %10 = shape_of(%1, dtype="int32");
  %11 = dyn.strided_slice(%1, %9, %10, meta[relay.Constant][1], begin=None, end=None, strides=None, axes=None);
  dyn.full(%x, %11, shape=None, dtype="float32")
}

#[metadata]
{
  "root": 1, 
  "nodes": [
    {
      "type_key": ""
    }, 
    {
      "type_key": "Map", 
      "keys": [
        "relay.Constant"
      ], 
      "data": [2]
    }, 
    {
      "type_key": "Array", 
      "data": [3, 6]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "0", 
        "data": "0", 
        "span": "0", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "VirtualDevice", 
      "attrs": {
        "device_type_int": "-1", 
        "memory_scope": "5", 
        "target": "0", 
        "virtual_device_id": "-1"
      }
    }, 
    {
      "type_key": "runtime.String"
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "0", 
        "data": "1", 
        "span": "0", 
        "virtual_device_": "4"
      }
    }
  ], 
  "b64ndarrays": [
    "P6G0lvBAXt0AAAAAAAAAAAEAAAAAAAAAAQAAAAAgAQABAAAAAAAAAAQAAAAAAAAAAAAAAA==", 
    "P6G0lvBAXt0AAAAAAAAAAAEAAAAAAAAAAQAAAAAgAQABAAAAAAAAAAQAAAAAAAAAAQAAAA=="
  ], 
  "attrs": {"tvm_version": "0.13.dev0"}
}