#[version = "0.0.5"]
def @main(%x: Tensor[(2, 2, 10, 10, 2), float32], %weight, %out_bias: Tensor[(2, 1, 1, 2), float32]) {
  %0 = nn.conv2d(%x, %weight, padding=[1, 1, 1, 1], channels=4, kernel_size=[3, 3], data_layout="NCHW2c", kernel_layout="OIHW1i2o");
  %1 = multiply(%0, meta[relay.Constant][0]);
  %2 = nn.relu(%1);
  %3 = nn.conv2d(%2, %weight, padding=[1, 1, 1, 1], channels=4, kernel_size=[3, 3], data_layout="NCHW2c", kernel_layout="OIHW1i2o");
  %4 = multiply(%3, meta[relay.Constant][0]);
  %5 = nn.conv2d(%2, %weight, padding=[1, 1, 1, 1], channels=4, kernel_size=[3, 3], data_layout="NCHW2c", kernel_layout="OIHW1i2o");
  %6 = multiply(%5, meta[relay.Constant][0]);
  %7 = nn.relu(%4);
  %8 = nn.relu(%6);
  add(%7, %8)
}

#[metadata]
{
  "root": 1, 
  "nodes": [
    {
      "type_key": ""
    }, 
    {
      "type_key": "Map", 
      "keys": [
        "relay.Constant"
      ], 
      "data": [2]
    }, 
    {
      "type_key": "Array", 
      "data": [3]
    }, 
    {
      "type_key": "relay.Constant", 
      "attrs": {
        "_checked_type_": "0", 
        "data": "0", 
        "span": "0", 
        "virtual_device_": "4"
      }
    }, 
    {
      "type_key": "VirtualDevice", 
      "attrs": {
        "device_type_int": "-1", 
        "memory_scope": "5", 
        "target": "0", 
        "virtual_device_id": "-1"
      }
    }, 
    {
      "type_key": "runtime.String"
    }
  ], 
  "b64ndarrays": [
    "P6G0lvBAXt0AAAAAAAAAAAEAAAAAAAAABAAAAAIgAQACAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAACAAAAAAAAABAAAAAAAAAA6kkAP4WuET9zg04/vVgrPw=="
  ], 
  "attrs": {"tvm_version": "0.13.dev0"}
}