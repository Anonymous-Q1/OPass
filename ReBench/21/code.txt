#[version = "0.0.5"]
def @main(%x0: Tensor[(1, 64, 56, 56), float32], %x1: Tensor[(29, 64, 56, 56), float32], %x2: Tensor[(30, 64, 56, 92), float32], %x3: Tensor[(30, 64, 56, 20), float32], %x4: Tensor[(64, 64, 3, 3), float32]) {
    %0 = nn.global_max_pool2d(%x0, layout="NCHW", out_layout="");
    %1 = (%x0, %x1);
    %2 = concatenate(%1, axis=0);
    %3 = (%2, %x2, %x3);
    %4 = concatenate(%3, axis=3);
    %5 = cast(%x2, dtype="bfloat16");
    %6 = clip(%5, a_min=-0.2f, a_max=0.4f);
    %7 = ones_like(%2);
    %8 = add(%2, %7);
    %9 = nn.global_max_pool2d(%8, layout="NCHW", out_layout="");
    %10 = multiply(%x4, 2.0f);
    %11 = nn.conv2d(%9, %10, strides=[1, 1], padding=[1, 1, 1, 1], dilation=[1, 1], groups=1, channels=64, kernel_size=[3, 3], data_layout="NCHW", kernel_layout="OIHW", out_layout="", out_dtype="");
    %12 = add(0.0f, %11);
    %13 = nn.relu(%12);
    %14 = erf(%8);
    %15 = add(%x3, 1.0f);
    %16 = exp(%15);
    %17 = squeeze(%16, axis=None);
    %18 = add(0.0f, 1.0f);
    %19 = exp(%18);
    %20 = squeeze(%19, axis=None);
    %21 = (%0, %4, %6, %13, %14, %17, %20);
    %21
}
