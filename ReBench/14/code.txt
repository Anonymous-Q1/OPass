#[version = "0.0.5"]
def @main(%x0: Tensor[(1, 3, 224, 224), int8]) {
    %0 = qnn.dequantize(%x0, 2.0f, 0, axis=-1);
    %1 = split(%0, indices_or_sections=2, axis=3);
    %2 = %1.0;
    %3 = transpose(%2, axes=[0, 3, 1, 2]);
    %4 = layout_transform(%3, src_layout="NCHW", dst_layout="NCHW4c");
    %5 = nn.relu(%4);
    %6 = layout_transform(%5, src_layout="NCHW4c", dst_layout="NCHW");
    %7 = transpose(%6, axes=[0, 2, 3, 1]);
    %8 = exp(%3);
    let %x1 = 1;
    %9 = add(%x1, %x1);
    %10 = qnn.quantize(%2, 2.0f, 0, out_dtype="int8", axis=-1);
    %11 = qnn.dequantize(%10, 2.0f, 0, axis=-1);
    %12 = image.resize2d(%11, size=[4, 4], roi=[0.0f, 0.0f, 0.0f, 0.0f], layout="NCHW", method="linear", coordinate_transformation_mode="half_pixel", rounding_method="", cubic_alpha=-0.5f, cubic_exclude=0, extrapolation_value=0.0f, out_dtype="");
    %13 = qnn.quantize(%12, 2.0f, 0, out_dtype="int8", axis=-1);
    %14 = qnn.dequantize(%13, 2.0f, 0, axis=-1);
    %15 = split(%14, indices_or_sections=2, axis=3);
    %16 = %15.0;
    %17 = qnn.quantize(%16, 2.0f, 0, out_dtype="int8", axis=-1);
    %18 = qnn.dequantize(%x0, 2.0f, 0, axis=-1);
    %19 = topk(%18, k=1, axis=0, ret_type="values", is_ascend=1, dtype="float32");
    %20 = qnn.quantize(%19, 2.0f, 0, out_dtype="int8", axis=-1);
    %21 = qnn.dequantize(%20, 2.0f, 0, axis=-1);
    %22 = argsort(%21, axis=1, is_ascend=1, dtype="int32");
    %23 = layout_transform(%4, src_layout="NCHW4c", dst_layout="NCHW8c");
    %24 = layout_transform(%23, src_layout="NCHW8c", dst_layout="NCHW4c");
    %25 = nn.relu(%24);
    %26 = nn.max_pool2d(%11, pool_size=[2, 2], strides=[2, 2], dilation=[1, 1], padding=[0, 0, 0, 0], layout="NCHW", out_layout="", ceil_mode=0);
    %27 = nn.upsampling(%26, scale_h=2.0f, scale_w=2.0f, layout="NCHW", method="nearest_neighbor", align_corners=0);
    %28 = (%27, %11);
    %29 = concatenate(%28, axis=1);
    %30 = add(%29, 1.0f);
    %31 = (%7, %8, %9, %17, %22, %25, %30);
    let %x2 = 2;
    %31
}
