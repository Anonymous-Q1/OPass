#[version = "0.0.5"]
def @main(%x0: Tensor[(4, 7), float32], %x1: Tensor[(2, 7, 2), float32], %x2: Tensor[(2, 7, 2), float32], %x3: Tensor[(2, 77, 2), float32], %x4: Tensor[(2, 7, 2), float32], %x5: Tensor[(2, 7, 2), float32], %x6: Tensor[(14, 2), float32], %x7: float32) {
    %0 = shape_of(%x1, dtype="int32");
    %1 = dyn.reshape(%x0, %0, newshape=[], allowzero=0);
    %2 = shape_of(%x0, dtype="int32");
    %3 = dyn.reshape(%1, %2, newshape=[], allowzero=0);
    %4 = add(%x1, %x2);
    %5 = ndarray_size(%4, dtype="int32");
    %6 = zeros_like(%5);
    %7 = nn.batch_matmul(%x3, %x2, out_dtype="", transpose_a=0, transpose_b=1);
    %8 = nn.batch_matmul(%x3, %x4, out_dtype="", transpose_a=0, transpose_b=1);
    %9 = nn.batch_matmul(%x3, %x5, out_dtype="", transpose_a=0, transpose_b=1);
    %10 = (%7, %8, %9);
    %11 = add(1.0f, 1.0f);
    %12 = add(%11, %x5);
    %13 = zeros(shape=[1], dtype="float32");
    %14 = add(%12, %13);
    %15 = shape_of(%x6, dtype="int32");
    %16 = dyn.reshape(%12, %15, newshape=[], allowzero=0);
    %17 = shape_of(%12, dtype="int32");
    %18 = dyn.reshape(%16, %17, newshape=[], allowzero=0);
    %19 = ones_like(%13);
    %20 = add(%13, %19);
    %21 = full_like(%0, %x7);
    %22 = zeros_like(%21);
    %23 = (%3, %6, %10, %14, %18, %20, %22);
    %23
}
