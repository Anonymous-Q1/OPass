#[version = "0.0.5"]
def @main(%x0: Tensor[(1, 3, 100, 100), float32], %x1: Tensor[(3, 100, 100), float32], %x2: Tensor[(64, 3, 3, 3), float32], %x3: Tensor[(64, 100, 100), float32]) {
    %0 = add(%x0, %x0);
    %1 = shape_of(%x1, dtype="int32");
    %2 = dyn.reshape(%0, %1, newshape=[], allowzero=0);
    %3 = shape_of(%0, dtype="int32");
    %4 = dyn.reshape(%2, %3, newshape=[], allowzero=0);
    %5 = shape_of(%2, dtype="int32");
    %6 = dyn.reshape(%4, %5, newshape=[], allowzero=0);
    %7 = shape_of(%4, dtype="int32");
    %8 = dyn.reshape(%6, %7, newshape=[], allowzero=0);
    %9 = clip(%1, a_min=0.0f, a_max=255.0f);
    %10 = cast(%9, dtype="uint8");
    %11 = cast(%10, dtype="int32");
    %12 = qnn.dequantize(%10, 2.0f, 114, axis=-1);
    %13 = nn.relu(%12);
    %14 = qnn.quantize(%13, 2.0f, 114, out_dtype="uint8", axis=-1);
    %15 = nn.conv2d(%x0, %x2, strides=[1, 1], padding=[1, 1, 1, 1], dilation=[1, 1], groups=1, channels=64, kernel_size=[3, 3], data_layout="NCHW", kernel_layout="OIHW", out_layout="", out_dtype="");
    %16 = nn.relu(%15);
    %17 = shape_of(%x3, dtype="int32");
    %18 = dyn.reshape(%16, %17, newshape=[], allowzero=0);
    %19 = shape_of(%16, dtype="int32");
    %20 = dyn.reshape(%18, %19, newshape=[], allowzero=0);
    %21 = shape_of(%18, dtype="int32");
    %22 = dyn.reshape(%20, %21, newshape=[], allowzero=0);
    %23 = shape_of(%20, dtype="int32");
    %24 = dyn.reshape(%22, %23, newshape=[], allowzero=0);
    %25 = nn.relu(2.0f);
    %26 = add(%25, 1.0f);
    %27 = nn.relu(2.0f);
    %28 = add(%27, 1.0f);
    %29 = add(%26, %28);
    %30 = nn.softmax(%x2, axis=-1);
    %31 = nn.softmax(%15, axis=-1);
    %32 = cast(%31, dtype="float16");
    %33 = layout_transform(%31, src_layout="NHWC", dst_layout="NCHW");
    %34 = layout_transform(%33, src_layout="NCHW", dst_layout="NCHW4c");
    %35 = nn.relu(%34);
    %36 = layout_transform(%35, src_layout="NCHW4c", dst_layout="NCHW");
    %37 = layout_transform(%36, src_layout="NCHW", dst_layout="NHWC");
    %38 = (%8, %11, %14, %24, %29, %30, %32, %37);
    %38
}
