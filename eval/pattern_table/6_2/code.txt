#[version = "0.0.5"]
def @main(%x: Tensor[(1, 128, 64), int8] /* ty=Tensor[(1, 128, 64), int8] */, %w: Tensor[(1, 256, 64), int8] /* ty=Tensor[(1, 256, 64), int8] */) -> Tensor[(1, 128, 256), int8] {
  %0 = qnn.dequantize(%x, 2f /* ty=float32 */, 0 /* ty=int32 */) /* ty=Tensor[(1, 128, 64), float32] */;
  %1 = qnn.dequantize(%w, 0.5f /* ty=float32 */, 0 /* ty=int32 */) /* ty=Tensor[(1, 256, 64), float32] */;
  %2 = nn.batch_matmul(%0, %1, transpose_b=True) /* ty=Tensor[(1, 128, 256), float32] */;
  qnn.quantize(%2, 1f /* ty=float32 */, 0 /* ty=int32 */, out_dtype="int8") /* ty=Tensor[(1, 128, 256), int8] */
}
