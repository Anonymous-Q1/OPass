digraph "1_2" {
	node [fontname="Linux Biolinum O" shape=record]
	in0 [label="in0: Tensor[(1, 5, 5, 4), float32]"]
	con0 [label="con0: float32"]
	opr0 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>float32}|add\n|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	in0 -> opr0:i0
	con0 -> opr0:i1
	con1 [label="con1: Tensor[(3, 3, 4, 1), float32]"]
	opr1 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>Tensor[(3, 3, 4, 1), float32]}|nn.conv2d\nstrides=[1, 1]\npadding=[2, 2, 2, 2]\ndilation=[2, 2]\ngroups=4\nchannels=4\nkernel_size=[3, 3]\ndata_layout=\"NHWC\"\nkernel_layout=\"HWOI\"\nout_layout=\"\"\nout_dtype=\"\"|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	opr0:o0 -> opr1:i0
	con1 -> opr1:i1
	con2 [label="con2: float32"]
	opr2 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>float32}|add\n|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	opr1:o0 -> opr2:i0
	con2 -> opr2:i1
	con3 [label="con3: float32"]
	opr3 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>float32}|add\n|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	in0 -> opr3:i0
	con3 -> opr3:i1
	opr4 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]}|nn.space_to_batch_nd\nblock_shape=[2, 2]\npaddings=[[2, 3], [2, 3]]\npad_value=0.0f|{<o0>Tensor[(4, 5, 5, 4), float32]}}"]
	opr3:o0 -> opr4:i0
	opr5 [label="{{<i0>Tensor[(4, 5, 5, 4), float32]|<i1>Tensor[(3, 3, 4, 1), float32]}|nn.conv2d\nstrides=[1, 1]\npadding=[0, 0, 0, 0]\ndilation=[1, 1]\ngroups=4\nchannels=4\nkernel_size=[3, 3]\ndata_layout=\"NHWC\"\nkernel_layout=\"HWOI\"\nout_layout=\"\"\nout_dtype=\"\"|{<o0>Tensor[(4, 3, 3, 4), float32]}}"]
	opr4:o0 -> opr5:i0
	con1 -> opr5:i1
	opr6 [label="{{<i0>Tensor[(4, 3, 3, 4), float32]}|nn.batch_to_space_nd\nblock_shape=[2, 2]\ncrops=[[0, 1], [0, 1]]|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	opr5:o0 -> opr6:i0
	con4 [label="con4: float32"]
	opr7 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>float32}|add\n|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	opr6:o0 -> opr7:i0
	con4 -> opr7:i1
	opr8 [label="{{<i0>Tensor[(1, 5, 5, 4), float32]|<i1>Tensor[(1, 5, 5, 4), float32]}|add\n|{<o0>Tensor[(1, 5, 5, 4), float32]}}"]
	opr2:o0 -> opr8:i0
	opr7:o0 -> opr8:i1
	out0 [label="out0: Tensor[(1, 5, 5, 4), float32]"]
	opr8:o0 -> out0
}
